{"version":3,"sources":["components/SelectionType.jsx","components/marketList.jsx","components/PersistentDrawer.jsx","input.js","App.js","reportWebVitals.js","index.js"],"names":["SelectionType","slectionType","onToggleSelections","map","item","Button","onClick","handleSelections","color","flag","name","price","id","MarketList","marketItem","selections","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","PersistentDrawer","selectedList","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","IconButton","aria-label","edge","Drawer","anchor","paper","direction","Divider","List","length","ListItem","handleToggleSelection","mockresponse","grid","margin","textAlign","height","App","eventsList","setEventsList","setSelectedList","useEffect","toggleSelections","includes","filter","listItem","Grid","container","hasOwnProperty","markets","lg","md","xs","Paper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee525bc9.chunk.js","sourcesContent":["import Button from \"@material-ui/core/Button\";\nexport default function SelectionType({ slectionType, onToggleSelections }) {\n    const handleSelections = (item) => {\n        onToggleSelections(item)\n    }\n    return (\n        <>\n            {slectionType.map((item) => {\n                return (\n                    <div key={item.id}>\n                        <Button\n                            onClick={() => handleSelections(item)}\n                            color={item.flag ? \"primary\" : \"default\"}\n                            >\n                            {item.name}\n                            {item.price}\n                        </Button>\n                    </div>\n                )\n            })\n            }\n        </>\n    )\n}","import SelectionType from \"./SelectionType\";\n\nexport default function MarketList({ marketItem, onToggleSelections }) {\n\n    return (\n        <>\n            {marketItem.map((item) => {\n                return (\n                    <div item key={item.id}>\n                        {item.name}\n                        <SelectionType slectionType={item.selections} onToggleSelections={onToggleSelections} />\n                    </div>\n                )\n            })\n            }\n        </>\n    )\n}","/*\n *persistent drawer code taken and modified from material ui site\n*/\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from '@material-ui/core/ListItem';\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function PersistentDrawer({ selectedList, onToggleSelections }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggleSelection = (item) => {\n    onToggleSelections(item)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Betting Slip\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {selectedList.length > 0 ? selectedList.map(item => {\n            return <ListItem key={item.id}>\n              <div>{item.name} to </div>\n              <div>{item.price}</div>\n              <Button variant=\"contained\" color=\"secondary\" onClick={() => handleToggleSelection(item)}>Delete</Button>\n            </ListItem>\n          })\n            :\n            <ListItem>Empty cart</ListItem>\n          }\n        </List>\n\n      </Drawer>\n    </div>\n  );\n}\n","export const mockresponse = [\n  {\n    \"id\": \"EVT_1\",\n    \"name\": \"Real Madrid vs Barcelona\",\n    \"markets\": [\n      {\n        \"id\": \"MKT_1\",\n        \"name\": \"Team to Win\",\n        \"selections\": [\n          {\n            \"id\": \"SEL_1\",\n            \"name\": \"Real Madrid\",\n            \"price\": 1.23\n          },\n          {\n            \"id\": \"SEL_2\",\n            \"name\": \"Barcelona\",\n            \"price\": 2.05\n          }\n        ]\n      },\n      {\n        \"id\": \"MKT_2\",\n        \"name\": \"Player to Score First\",\n        \"selections\": [\n          {\n            \"id\": \"SEL_3\",\n            \"name\": \"Ronaldo\",\n            \"price\": 1.15\n          },\n          {\n            \"id\": \"SEL_4\",\n            \"name\": \"Messi\",\n            \"price\": 1.30\n          },\n          {\n            \"id\": \"SEL_5\",\n            \"name\": \"Bale\",\n            \"price\": 1.35\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"id\": \"EVT_2\",\n    \"name\": \"Atletico Madrid vs Malaga\",\n    \"markets\": [\n      {\n        \"id\": \"MKT_3\",\n        \"name\": \"Team to Win\",\n        \"selections\": [\n          {\n            \"id\": \"SEL_6\",\n            \"name\": \"Atletico\",\n            \"price\": 1.40\n          },\n          {\n            \"id\": \"SEL_7\",\n            \"name\": \"Malaga\",\n            \"price\": 3.05\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"id\": \"EVT_3\",\n    \"name\": \"Empty Event that shouldn't render\",\n    \"markets\": []\n  }\n]","import './App.css';\nimport { getEventList } from \"./services/getEventsList\";\nimport { useEffect, useState } from \"react\";\nimport MarketList from \"./components/marketList\";\nimport PersistentDrawer from './components/PersistentDrawer'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { mockresponse } from './input'\n\nconst useStyles = makeStyles((theme) => ({\n    grid: {\n        width: '100%',\n        margin: '0px'\n    },\n    item: {\n        textAlign: 'center',\n    },\n    paper: {\n        height: '100%'\n    }\n})\n)\nfunction App() {\n    const [eventsList, setEventsList] = useState([])\n    const [selectedList, setSelectedList] = useState([])\n    const classes = useStyles()\n\n    useEffect(() => {\n        setEventsList(mockresponse)\n        //the service was blocked when served so hosting a mock repsonse \n        // getEventList().then(eventRes => {\n        //     setEventsList(eventRes)\n        // })\n    }, []) // get data only on page loads\n\n\n    const toggleSelections = (item) => {\n        if (selectedList.includes(item)) {\n            item.flag = false\n            setSelectedList(selectedList.filter(listItem => listItem.id !== item.id))\n        } else {\n            item.flag = true\n            setSelectedList([...selectedList, item])\n        }\n    }\n    return (\n        <>\n            <PersistentDrawer selectedList={selectedList} onToggleSelections={toggleSelections} />\n            <Grid container spacing={2} className={classes.grid}>\n                {eventsList.length > 0\n                    ? eventsList.map((listItem) => {\n                        return (\n                            listItem.hasOwnProperty('markets') && listItem.markets.length > 0 &&\n                            <Grid item key={listItem.id} className={classes.item} lg={6} md={6} xs={12}>\n                                <Paper item className={classes.paper}>{listItem.name}\n                                    <hr />\n                                    <MarketList marketItem={listItem.markets} onToggleSelections={toggleSelections}>\n                                    </MarketList>\n                                </Paper>\n                            </Grid>\n                        )\n                    }\n                    )\n                    : <div> loading </div>}\n            </Grid>\n        </>\n    )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}